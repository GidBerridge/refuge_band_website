{"mappings":"AACA,MAAMA,IAAMC,SAASC,cAAc,WAC7BC,MAAOF,SAASC,cAAc,eAE9BE,YAAc,SAAUC,GAC5B,GAAIA,EAAEC,OAAOC,UAAUC,SAAS,YAAa,CAC3C,MAAMC,EAAOJ,EAAEC,OAEEG,EAAKC,QAAQ,WAAWC,iBAAiB,aACjDC,SAAQC,IACXA,IAAOJ,IAAMI,EAAGC,MAAMC,QAAUC,KACpCH,EAAGC,MAAMG,WAAa,QAK5BjB,IAAIkB,iBAAiB,YAAad,YAAYe,KAAK,KACnDnB,IAAIkB,iBAAiB,WAAYd,YAAYe,KAAK,IAElD,MAAMC,UAAY,SAAUf,GAC1B,GAAIA,EAAEC,OAAOC,UAAUC,SAAS,aAAc,CAC5C,MAAMC,EAAOJ,EAAEC,OAEDL,SAASU,iBAAiB,cAClCC,SAAQC,IACRA,IAAOJ,IAAMI,EAAGC,MAAMC,QAAUC,WAK1Cb,MAAMe,iBAAiB,YAAaE,UAAUD,KAAK,KACnDhB,MAAMe,iBAAiB,WAAYE,UAAUD,KAAK,IAKlD,MAAME,UAAYpB,SAASC,cAAc,cACnCoB,QAAUrB,SAASC,cAAc,sBAI9BqB,aACLF,UAAUd,UAAUiB,OAAO,UAC3BF,QAAQf,UAAUiB,OAAO,UAJ7BH,UAAUH,iBAAiB,QAASK,YAOpC,MAAME,QAAUxB,SAASU,iBAAiB,sBAEjCe,YACLL,UAAUd,UAAUoB,OAAO,UAC3BL,QAAQf,UAAUoB,OAAO,UAG7BF,QAAQb,SAAQgB,GAAKA,EAAEV,iBAAiB,QAASQ,aAOjD,MAAMG,OAAS5B,SAASC,cAAc,WAChC4B,UAAiD,EAArC9B,IAAI+B,wBAAwBC,OAExCC,UAAY,SAASC,GACzB,MAAOC,GAASD,EAEZC,EAAMC,eACLpC,IAAIO,UAAUoB,OAAO,UADA3B,IAAIO,UAAU8B,IAAI,WAIxCC,eAAiB,IAAIC,qBAAqBN,UAAW,CACzDO,KAAM,KACNC,UAAW,EACXC,WAAU,GAAKZ,yBAMRa,iBACL,MAAMC,EAAc3C,SAASU,iBAAiB,YAC9CkC,QAAQC,IAAI,kBACZ,MAWMC,EAAkB,IAAIR,sBAXN,SAAUL,EAASc,GACzC,MAAOb,GAASD,EAGXC,EAAMC,iBAEXD,EAAM7B,OAAOC,UAAUoB,OAAO,mBAC9BQ,EAAM7B,OAAOC,UAAU8B,IAAI,UAC3BW,EAASC,UAAUd,EAAM7B,WAGuC,CAChEkC,KAAM,KACNC,UAAW,MAGXG,EAAYhC,SAAQ,SAAUsC,GAC9BH,EAAgBI,QAAQD,MAxB5BZ,eAAea,QAAQtB,QA4BvBc","sources":["Documents/Websites/refuge_band_website/index.js"],"sourcesContent":["// Menu fade animation\nconst nav = document.querySelector(\".navbar\");\nconst music= document.querySelector(\".music-card\")\n\nconst handleHover = function (e) {\n  if (e.target.classList.contains('nav-text')) { \n    const link = e.target;\n    \n    const siblings = link.closest('.navbar').querySelectorAll('.nav-text');\n    siblings.forEach(el => {\n      if (el !== link) el.style.opacity = this,\n      el.style.transition = 1;\n    });\n    \n  }\n};\nnav.addEventListener('mouseover', handleHover.bind(0.5));\nnav.addEventListener('mouseout', handleHover.bind(1));\n\nconst tuneHover = function (e) {\n  if (e.target.classList.contains('tune-text')) { \n    const link = e.target;\n    \n    const tunes = document.querySelectorAll('.tune-text');\n    tunes.forEach(el => {\n      if (el !== link) el.style.opacity = this;\n    });\n    \n  }\n};\nmusic.addEventListener('mouseover', tuneHover.bind(0.5));\nmusic.addEventListener('mouseout', tuneHover.bind(1));\n\n// ///////////////////////////////////////\n// Hamburger\n\nconst hamburger = document.querySelector(\".hamburger\");\nconst navMenu = document.querySelector(\".nav-menu\");\n\nhamburger.addEventListener(\"click\", mobileMenu);\n\nfunction mobileMenu() {\n    hamburger.classList.toggle(\"active\");\n    navMenu.classList.toggle(\"active\");\n}\n\nconst navLink = document.querySelectorAll(\".nav-item\");\n\nfunction closeMenu() {\n    hamburger.classList.remove(\"active\");\n    navMenu.classList.remove(\"active\");\n}\n\nnavLink.forEach(n => n.addEventListener(\"click\", closeMenu));\n\n\n\n//////////////////////////////////////\n// Sticky header\n// const nav = document.querySelector('.navbar');\nconst header = document.querySelector('.header');\nconst navHeight = nav.getBoundingClientRect().height * 2;\n\nconst stickyNav = function(entries) {\n  const [entry] = entries;\n\n  if(!entry.isIntersecting) nav.classList.add('sticky');\n  else nav.classList.remove('sticky');\n};\n\nconst headerObserver = new IntersectionObserver(stickyNav, {\n  root: null,\n  threshold: 0,\n  rootMargin: `${navHeight }px`,\n});\nheaderObserver.observe(header);\n\n// reveal sections\n\nfunction revealSections() {\n    const allSections = document.querySelectorAll('.section');\n    console.log('revealSections');\n    const revealSection = function (entries, observer) {\n    const [entry] = entries;\n        \n\n    if (!entry.isIntersecting) return;\n\n    entry.target.classList.remove('section--hidden');\n    entry.target.classList.add('fadeUp');\n    observer.unobserve(entry.target);\n    };\n\n    const sectionObserver = new IntersectionObserver(revealSection, {\n    root: null,\n    threshold: 0.15,\n    });\n\n    allSections.forEach(function (section) {\n    sectionObserver.observe(section);\n    });\n\n};\nrevealSections()"],"names":["nav","document","querySelector","music","handleHover","e","target","classList","contains","link","closest","querySelectorAll","forEach","el","style","opacity","this","transition","addEventListener","bind","tuneHover","hamburger","navMenu","mobileMenu","toggle","navLink","closeMenu","remove","n","header","navHeight","getBoundingClientRect","height","stickyNav","entries","entry","isIntersecting","add","headerObserver","IntersectionObserver","root","threshold","rootMargin","revealSections","allSections","console","log","sectionObserver","observer","unobserve","section","observe"],"version":3,"file":"index.fa0e8fd7.js.map"}